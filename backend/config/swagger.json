{
  "openapi": "3.0.3",
  "info": {
    "title": "Lost & Found Pet Network API",
    "description": "A comprehensive API for managing lost and found pets. Users can post missing or found pets, search for pets, contact owners, and report issues. Admins can moderate content and manage users.",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@petadoption.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    },
    {
      "url": "http://localhost:5001",
      "description": "Alternative development server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization endpoints"
    },
    {
      "name": "Pets",
      "description": "Pet management and search endpoints"
    },
    {
      "name": "Admin",
      "description": "Administrative functions and moderation"
    },
    {
      "name": "Notifications",
      "description": "User notification management"
    },
    {
      "name": "Reports",
      "description": "User reporting system"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Create a new user account with email verification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistration"
              },
              "example": {
                "name": "John Doe",
                "email": "john@example.com",
                "password": "Password123",
                "phone": "+1234567890"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User login",
        "description": "Authenticate user and return JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              },
              "example": {
                "email": "john@example.com",
                "password": "Password123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get current user",
        "description": "Retrieve current user profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Authentication"],
        "summary": "Update user profile",
        "description": "Update current user profile information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/forgot-password": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Request password reset",
        "description": "Send password reset email to user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verify-email/{token}": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Verify email address",
        "description": "Verify user email with token",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "description": "Email verification token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/reset-password/{token}": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Reset password",
        "description": "Reset password using token",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "description": "Password reset token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "minLength": 6,
                    "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)"
                  },
                  "confirmPassword": {
                    "type": "string"
                  }
                },
                "required": ["password", "confirmPassword"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/change-password": {
      "put": {
        "tags": ["Authentication"],
        "summary": "Change password",
        "description": "Change user password",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string",
                    "minLength": 6,
                    "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)"
                  },
                  "confirmPassword": {
                    "type": "string"
                  }
                },
                "required": ["currentPassword", "newPassword", "confirmPassword"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logout user",
        "description": "Logout user and invalidate token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Refresh token",
        "description": "Refresh JWT token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/resend-verification": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Resend verification email",
        "description": "Resend email verification",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Verification email sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "delete": {
        "tags": ["Authentication"],
        "summary": "Delete account",
        "description": "Soft delete user account",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Account deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/pets": {
      "get": {
        "tags": ["Pets"],
        "summary": "Get all pets",
        "description": "Retrieve pets with optional filtering and pagination",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter by pet status",
            "schema": {
              "type": "string",
              "enum": ["missing", "found", "reunited"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by pet type",
            "schema": {
              "type": "string",
              "enum": ["dog", "cat", "bird", "rabbit", "hamster", "fish", "other"]
            }
          },
          {
            "name": "breed",
            "in": "query",
            "description": "Search by breed",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "color",
            "in": "query",
            "description": "Search by color",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gender",
            "in": "query",
            "description": "Filter by gender",
            "schema": {
              "type": "string",
              "enum": ["male", "female", "unknown"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pets retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Pets"],
        "summary": "Create pet post",
        "description": "Create a new pet post (missing or found)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PetCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pet post created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/pets/{id}": {
      "get": {
        "tags": ["Pets"],
        "summary": "Get pet by ID",
        "description": "Retrieve a specific pet post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Pet ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pet retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetResponse"
                }
              }
            }
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Pets"],
        "summary": "Update pet post",
        "description": "Update an existing pet post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Pet ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pet updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Pets"],
        "summary": "Delete pet post",
        "description": "Delete a pet post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Pet ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pet deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/pets/search/nearby": {
      "get": {
        "tags": ["Pets"],
        "summary": "Search pets by location",
        "description": "Find pets within a specified radius of coordinates",
        "parameters": [
          {
            "name": "latitude",
            "in": "query",
            "required": true,
            "description": "Latitude coordinate",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "longitude",
            "in": "query",
            "required": true,
            "description": "Longitude coordinate",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Search radius in kilometers",
            "schema": {
              "type": "number",
              "default": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Nearby pets retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/pets/{id}/contact": {
      "post": {
        "tags": ["Pets"],
        "summary": "Contact pet owner",
        "description": "Send contact request to pet owner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Pet ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact request sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/pets/my-pets": {
      "get": {
        "tags": ["Pets"],
        "summary": "Get my pets",
        "description": "Get pets created by current user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User pets retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/pets/{id}/reunite": {
      "patch": {
        "tags": ["Pets"],
        "summary": "Mark pet as reunited",
        "description": "Mark a pet as reunited with owner",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Pet ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pet marked as reunited successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/pets/{id}/approve": {
      "patch": {
        "tags": ["Pets"],
        "summary": "Approve pet post",
        "description": "Approve a pet post (Admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Pet ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pet approved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/dashboard": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get admin dashboard stats",
        "description": "Retrieve dashboard statistics for admin",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard stats retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get all users",
        "description": "Retrieve all users with pagination and filtering",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "Filter by user role",
            "schema": {
              "type": "string",
              "enum": ["user", "admin", "shelter", "vet"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{id}": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Admin"],
        "summary": "Update user",
        "description": "Update user information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Admin"],
        "summary": "Delete user",
        "description": "Delete a user account",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/pets": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get all pets",
        "description": "Retrieve all pets with pagination and filtering",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by pet status",
            "schema": {
              "type": "string",
              "enum": ["missing", "found", "reunited"]
            }
          },
          {
            "name": "isApproved",
            "in": "query",
            "description": "Filter by approval status",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pets retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/pets/{id}": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get pet by ID",
        "description": "Retrieve a specific pet by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Pet ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pet retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Admin"],
        "summary": "Update pet",
        "description": "Update pet information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Pet ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pet updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Admin"],
        "summary": "Delete pet",
        "description": "Delete a pet post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Pet ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pet deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/reports": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get all reports",
        "description": "Retrieve all reports with pagination and filtering",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by report status",
            "schema": {
              "type": "string",
              "enum": ["pending", "under_review", "resolved", "dismissed"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by report type",
            "schema": {
              "type": "string",
              "enum": ["user", "pet_post", "spam", "inappropriate", "fake", "duplicate", "other"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reports retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/reports/{id}": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get report by ID",
        "description": "Retrieve a specific report by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Report ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Admin"],
        "summary": "Update report",
        "description": "Update report status and admin notes",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Report ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["pending", "under_review", "resolved", "dismissed"]
                  },
                  "adminNotes": {
                    "type": "string",
                    "maxLength": 1000
                  },
                  "action": {
                    "type": "string",
                    "enum": ["warn_user", "suspend_user", "delete_content", "no_action"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Report updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications": {
      "get": {
        "tags": ["Notifications"],
        "summary": "Get user notifications",
        "description": "Retrieve user notifications with pagination",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "isRead",
            "in": "query",
            "description": "Filter by read status",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notifications retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/unread-count": {
      "get": {
        "tags": ["Notifications"],
        "summary": "Get unread notification count",
        "description": "Get count of unread notifications",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Unread count retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/{id}": {
      "get": {
        "tags": ["Notifications"],
        "summary": "Get notification by ID",
        "description": "Retrieve a specific notification",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Notification ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "notification": {
                          "$ref": "#/components/schemas/Notification"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Notifications"],
        "summary": "Mark notification as read",
        "description": "Mark a specific notification as read",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Notification ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification marked as read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Notifications"],
        "summary": "Delete notification",
        "description": "Delete a specific notification",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Notification ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/mark-all-read": {
      "patch": {
        "tags": ["Notifications"],
        "summary": "Mark all notifications as read",
        "description": "Mark all user notifications as read",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "All notifications marked as read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/reports": {
      "post": {
        "tags": ["Reports"],
        "summary": "Create a report",
        "description": "Report a user or pet post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Report created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Reports"],
        "summary": "Get user reports",
        "description": "Retrieve reports created by or about the user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by report status",
            "schema": {
              "type": "string",
              "enum": ["pending", "under_review", "resolved", "dismissed"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reports retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/reports/{id}": {
      "get": {
        "tags": ["Reports"],
        "summary": "Get report by ID",
        "description": "Retrieve a specific report",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Report ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "report": {
                          "$ref": "#/components/schemas/Report"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Reports"],
        "summary": "Update report",
        "description": "Update a report (only by reporter)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Report ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Report updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Reports"],
        "summary": "Delete report",
        "description": "Delete a report (only by reporter)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Report ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/reports/about-me": {
      "get": {
        "tags": ["Reports"],
        "summary": "Get reports about me",
        "description": "Retrieve reports made about the current user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reports retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/reports/about-my-pets": {
      "get": {
        "tags": ["Reports"],
        "summary": "Get reports about my pets",
        "description": "Retrieve reports made about the current user's pets",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reports retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportsResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "UserRegistration": {
        "type": "object",
        "required": ["name", "email", "password", "phone"],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "pattern": "^[a-zA-Z\\s]+$"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)"
          },
          "phone": {
            "type": "string",
            "pattern": "^[\\+]?[1-9][\\d]{0,15}$"
          }
        }
      },
      "UserLogin": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          },
          "phone": {
            "type": "string",
            "pattern": "^[\\+]?[1-9][\\d]{0,15}$"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "maxLength": 100
          },
          "city": {
            "type": "string",
            "maxLength": 50
          },
          "state": {
            "type": "string",
            "maxLength": 50
          },
          "zipCode": {
            "type": "string",
            "maxLength": 10
          }
        }
      },
      "PetCreate": {
        "type": "object",
        "required": ["name", "type", "breed", "color", "gender", "status", "lastSeenLocation", "lastSeenDate"],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          "type": {
            "type": "string",
            "enum": ["dog", "cat", "bird", "rabbit", "hamster", "fish", "other"]
          },
          "breed": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "color": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female", "unknown"]
          },
          "age": {
            "type": "number",
            "minimum": 0,
            "maximum": 30
          },
          "ageUnit": {
            "type": "string",
            "enum": ["days", "weeks", "months", "years"]
          },
          "weight": {
            "type": "number",
            "minimum": 0
          },
          "weightUnit": {
            "type": "string",
            "enum": ["kg", "lbs"]
          },
          "status": {
            "type": "string",
            "enum": ["missing", "found", "reunited"]
          },
          "lastSeenLocation": {
            "$ref": "#/components/schemas/Location"
          },
          "lastSeenDate": {
            "type": "string",
            "format": "date-time"
          },
          "additionalNotes": {
            "type": "string",
            "maxLength": 1000
          },
          "microchipNumber": {
            "type": "string",
            "maxLength": 50
          },
          "collar": {
            "$ref": "#/components/schemas/Collar"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 50
            }
          }
        }
      },
      "PetUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          "type": {
            "type": "string",
            "enum": ["dog", "cat", "bird", "rabbit", "hamster", "fish", "other"]
          },
          "breed": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "color": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female", "unknown"]
          },
          "age": {
            "type": "number",
            "minimum": 0,
            "maximum": 30
          },
          "ageUnit": {
            "type": "string",
            "enum": ["days", "weeks", "months", "years"]
          },
          "weight": {
            "type": "number",
            "minimum": 0
          },
          "weightUnit": {
            "type": "string",
            "enum": ["kg", "lbs"]
          },
          "status": {
            "type": "string",
            "enum": ["missing", "found", "reunited"]
          },
          "lastSeenLocation": {
            "$ref": "#/components/schemas/Location"
          },
          "lastSeenDate": {
            "type": "string",
            "format": "date-time"
          },
          "additionalNotes": {
            "type": "string",
            "maxLength": 1000
          },
          "microchipNumber": {
            "type": "string",
            "maxLength": 50
          },
          "collar": {
            "$ref": "#/components/schemas/Collar"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 50
            }
          },
          "photos": {
            "type": "string",
            "description": "JSON string of existing photo URLs"
          }
        }
      },
      "Location": {
        "type": "object",
        "required": ["address", "coordinates"],
        "properties": {
          "address": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200
          },
          "coordinates": {
            "type": "object",
            "properties": {
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "maxItems": 2
              }
            }
          },
          "city": {
            "type": "string",
            "maxLength": 50
          },
          "state": {
            "type": "string",
            "maxLength": 50
          },
          "zipCode": {
            "type": "string",
            "maxLength": 10
          }
        }
      },
      "Collar": {
        "type": "object",
        "properties": {
          "hasCollar": {
            "type": "boolean"
          },
          "color": {
            "type": "string",
            "maxLength": 50
          },
          "description": {
            "type": "string",
            "maxLength": 200
          }
        }
      },
      "ContactRequest": {
        "type": "object",
        "required": ["name", "email", "phone"],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "pattern": "^[\\+]?[1-9][\\d]{0,15}$"
          },
          "message": {
            "type": "string",
            "maxLength": 1000
          }
        }
      },
      "ReportCreate": {
        "type": "object",
        "required": ["type", "reason"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["user", "pet_post", "spam", "inappropriate", "fake", "duplicate", "other"]
          },
          "reason": {
            "type": "string",
            "minLength": 1,
            "maxLength": 500
          },
          "description": {
            "type": "string",
            "maxLength": 1000
          },
          "reportedUserId": {
            "type": "string"
          },
          "reportedPetId": {
            "type": "string"
          },
          "evidence": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User"
              },
              "token": {
                "type": "string"
              }
            }
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "profilePicture": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": ["user", "admin", "shelter", "vet"]
          },
          "isEmailVerified": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PetResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "pet": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          }
        }
      },
      "Pet": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "breed": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "age": {
            "type": "number"
          },
          "ageUnit": {
            "type": "string"
          },
          "weight": {
            "type": "number"
          },
          "weightUnit": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "photos": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lastSeenLocation": {
            "$ref": "#/components/schemas/Location"
          },
          "lastSeenDate": {
            "type": "string",
            "format": "date-time"
          },
          "additionalNotes": {
            "type": "string"
          },
          "microchipNumber": {
            "type": "string"
          },
          "collar": {
            "$ref": "#/components/schemas/Collar"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isApproved": {
            "type": "boolean"
          },
          "views": {
            "type": "number"
          },
          "contactCount": {
            "type": "number"
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PetsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "pets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "pagination": {
                "$ref": "#/components/schemas/Pagination"
              }
            }
          }
        }
      },
      "UsersResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "users": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "pagination": {
                "$ref": "#/components/schemas/Pagination"
              }
            }
          }
        }
      },
      "NotificationsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "notifications": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Notification"
                }
              },
              "pagination": {
                "$ref": "#/components/schemas/Pagination"
              }
            }
          }
        }
      },
      "ReportsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "reports": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Report"
                }
              },
              "pagination": {
                "$ref": "#/components/schemas/Pagination"
              }
            }
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "isRead": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Report": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ReportResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "report": {
                "$ref": "#/components/schemas/Report"
              }
            }
          }
        }
      },
      "DashboardResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "stats": {
                "type": "object",
                "properties": {
                  "totalUsers": {
                    "type": "number"
                  },
                  "activeUsers": {
                    "type": "number"
                  },
                  "totalPets": {
                    "type": "number"
                  },
                  "approvedPets": {
                    "type": "number"
                  },
                  "pendingPets": {
                    "type": "number"
                  },
                  "totalReports": {
                    "type": "number"
                  },
                  "pendingReports": {
                    "type": "number"
                  },
                  "highPriorityReports": {
                    "type": "number"
                  }
                }
              },
              "recent": {
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/User"
                    }
                  },
                  "pets": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Pet"
                    }
                  },
                  "reports": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Report"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          },
          "pages": {
            "type": "integer"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "statusCode": {
                "type": "integer"
              }
            }
          }
        }
      }
    }
  }
}
